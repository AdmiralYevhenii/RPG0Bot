# -*- coding: utf-8 -*-
"""
/quest ‚Äî –ø—Ä–æ—Å—Ç–∏–π –ª–∞–Ω—Ü—é–∂–æ–∫: –≤–±–∏–π 3 –≤–æ—Ä–æ–≥—ñ–≤ -> –Ω–∞–≥–æ—Ä–æ–¥–∞.
"""
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from ..models import ensure_player_ud

async def quest(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    qst = context.user_data.get("quest")
    if not qst or qst.get("state") in ("completed", "rewarded"):
        kb = InlineKeyboardMarkup([[InlineKeyboardButton("–ü—Ä–∏–π–Ω—è—Ç–∏ –∫–≤–µ—Å—Ç: –ü–µ—Ä–µ–º–æ–≥—Ç–∏ 3 –≤–æ—Ä–æ–≥—ñ–≤", callback_data="quest:accept")]])
        await update.message.reply_html("üìú –î–æ—Å—Ç—É–ø–Ω–∏–π –∫–≤–µ—Å—Ç: <b>–ó–∞—á–∏—Å—Ç–∫–∞ –æ–∫–æ–ª–∏—Ü—å</b> ‚Äî –ø–µ—Ä–µ–º–æ–∂–∏ 3 –≤–æ—Ä–æ–≥—ñ–≤. –ù–∞–≥–æ—Ä–æ–¥–∞: 50–∑ —ñ 1 –∑—ñ–ª–ª—è.", reply_markup=kb)
    elif qst.get("state") == "active":
        await update.message.reply_html(f"üìú –ü—Ä–æ–≥—Ä–µ—Å –∫–≤–µ—Å—Ç—É: {qst.get('progress', 0)}/3. –ü–µ—Ä–µ–º–æ–∂—ñ—Ç—å —â–µ {3 - qst.get('progress', 0)} –≤–æ—Ä–æ–≥—ñ–≤.")
    elif qst.get("state") == "turnin":
        kb = InlineKeyboardMarkup([[InlineKeyboardButton("–û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞–≥–æ—Ä–æ–¥—É", callback_data="quest:reward")]])
        await update.message.reply_html("‚úÖ –ö–≤–µ—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–æ! –û—Ç—Ä–∏–º–∞–π—Ç–µ –Ω–∞–≥–æ—Ä–æ–¥—É.", reply_markup=kb)

async def on_quest_action(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    q = update.callback_query
    await q.answer()
    data = q.data.split(":", 1)[1]
    p = ensure_player_ud(context.user_data)
    quest_state = context.user_data.get("quest")

    if data == "accept":
        context.user_data["quest"] = {"id": "clear-3", "state": "active", "progress": 0}
        await q.edit_message_text("üìú –ö–≤–µ—Å—Ç –ø—Ä–∏–π–Ω—è—Ç–æ: –ø–µ—Ä–µ–º–æ–≥—Ç–∏ 3 –≤–æ—Ä–æ–≥—ñ–≤.")
        return

    if data == "reward":
        if quest_state and quest_state.get("state") == "turnin":
            p.gold += 50; p.potions += 1
            context.user_data["player"] = p.asdict()
            quest_state["state"] = "rewarded"
            context.user_data["quest"] = quest_state
            await q.edit_message_text("üí∞ +50 –∑–æ–ª–æ—Ç–∞, üß™ +1 –∑—ñ–ª–ª—è. –î—è–∫—É—î–º–æ –∑–∞ —Å–ª—É–∂–±—É!")
        else:
            await q.edit_message_text("–ù–∞–≥–æ—Ä–æ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
